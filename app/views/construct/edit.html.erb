<!--
The main construct designer view.
TODO - unobtrusive javascript

Making ajax calls every 20 seconds is kinda shitty, 
  let's load all the data it needs up front,
  let you play around and save
  1 request to load, 1 request to save

  -What data do we need
    -all biobytes in database -sequence, name, pic ids

  -What data will we submit?
    -array of parts in order (bio byte id's?)

-->
<script>

  // global variables

  var orfs;
  var linkers;

  //if any changes made..
  var changes = false;

  $(document).ready(function() {


      //ajax call to load data
      $.ajax({
        type: 'get',
        dataType: 'json',
        url: '/construct/get_data',
        success: function(data){
          orfs = data.orfs;
          linkers = data.linkers;
        }
      })

      //save button
      $("a#save").click(function() {

        //submit to server
        $.ajax({
          type: 'put',
          dataType: 'json',
          data: $('ol#parts_list').sortable('serialize', {attribute: 'part_id'}) + '&'
                + $('ol#parts_list').sortable('serialize', {attribute: 'byte_id'}) + '&'
                + 'id=<%= @construct.id %>',

          url: '/construct/save',
          success: function(data){
            $("li.part").each(function(index) {
              $(this).attr('part_id', "part_"+data.part_ids[index]);
            })
          }
            

          
        })
      })
    

      $("ol#parts_list").sortable({

        update: function(){

          changes=true;

          $("#sequence").text(groupBases(getSequence()))

          /*
          $.ajax({
            type: 'post',
            data: $('ol#parts_list').sortable('serialize') + '&id=<%= @construct.id %>', 
            dataType: 'script',
            url: '/construct/sort_parts',
            
            success: function(html){
              //update sequence
              html = groupBases(html); //group by 10
              $("#sequence").html(html);} 
            })
          */
          
        }
      
      }).droppable({
        
        accept: ":not(.ui-sortable-helper)",
        drop: function(event, ui) {
          changes = true;
          $(this).find("#placeholder").remove();

          $("<li id=part_"+ $(ui.draggable).attr('id') + "_0 class=part "
              +"byte_id=byte_" + $(ui.draggable).attr('id') + " "
              +"part_id=part_new " 
              +"></li>").html(function(){

            //ui.draggable.text()
            return ui.draggable.text(); 
            }).prependTo(this);

            
          $("#sequence").text(groupBases(getSequence()));
       /* 
          $.ajax({
            type: 'post',
            data: '&part=' + ui.draggable.text() + '&id=<%= @construct.id %>',
            dataType: 'json',
            url: '/construct/new_part',
            success: function(data){
              //get part id #, part name, etc.
              $("#part_new").attr("id", "part_" + data.part_id);
              //add class for css TODO
              $("#part_" + data.part_id).html( 
              
                data.name
                + " | <a href='/construct/delete_part?id=<%= @construct.id %>&amp;part_id="
                + data.part_id
                + "'>Delete</a>"

                );

              $("#sequence").text(groupBases(data.sequence));
              }
          })  
          */
             

        }
      });

      $("#parts_list").disableSelection();
      
      
      $(".byte").draggable({
        helper: "clone"

      });

      $("#trash").droppable({
        accepts: ":not(.byte)",
        //Highlight?
        drop: function(event, ui) {
          alert("Trashed!");
        }
      }); 
      

    });
</script>


<div id="parts_list">

<h1>Editing <%= @construct.name %></h1>

<!-- The sortable parts list.. -->
<ol id="parts_list">
<% if @order.empty? %>

  <li id = "placeholder">Drag parts here</li>

<% else %>
<% @order.each do |part| %>
  <li id = "part_<%=part.bio_byte_id%>_<%=part.id%>" class = "part" byte_id="byte_<%=part.bio_byte_id%>" part_id="part_<%=part.id%>"><%= part.bio_byte.name %> | 
      <%= link_to  "Delete", {:action => :delete_part,
                                 :id => @construct.id, 
                                 :part_id => part.id } %>
  </li>
  
<% end %>
<% end %>
</ol>
</div>

<div id="sequence_box">
<!-- Sequence box -->
<h2>Sequence:</h2>
<div id = "sequence">
  <script type="text/javascript"> 
    document.write(groupBases("<%= @sequence %>"));
  </script>
</div>
</div>

<div id="parts_bin">
<!-- Parts Bin -->
<h2>Parts Bin:</h2>

<ul id="parts_bin">
<% BioByte.all.each do |byte| %>
  <li id = "<%=byte.id%>" class = "byte"><%= byte.name %></li>
<% end %>
</ul>

<div id="trash">
<p>Trash</p>
</div>

</div>

<div id="nav">
<%=link_to "Back", {:action => :index} %>
<a href="#", id="save">Save</a>
</div>
